stages:
  - test
  - build
  - deploy

unit_tests:
  image: node
  stage: test
  script:
    - npm install
    - npm run webpack
    - npm run lint
    - npm run test

build:
  image: docker:latest
  services:
    - docker:dind
  stage: build
  script:
    # - apt-get update -y && apt-get install bzip2 -y
    - docker login -u gitlab-ci-token -p $CI_BUILD_TOKEN registry.gitlab.com
    - docker build -t registry.gitlab.com/web-audits/web-audits .
    - docker push registry.gitlab.com/web-audits/web-audits

deploy_staging:
  stage: deploy
  before_script:
    # Install ssh-agent if not already installed, it is required by Docker.
    # (change apt-get to yum if you use a CentOS-based image)
    - 'which ssh-agent || ( apt-get update -y && apt-get install openssh-client -y )'

    # Run ssh-agent (inside the build environment)
    - eval $(ssh-agent -s)

    # Add the SSH key stored in SSH_PRIVATE_KEY variable to the agent store
    - ssh-add <(echo "$SSH_PRIVATE_KEY")

    # For Docker builds disable host key checking. Be aware that by adding that
    # you are suspectible to man-in-the-middle attacks.
    # WARNING: Use this only with the Docker executor, if you use it with shell
    # you will overwrite your user's SSH config.
    - mkdir -p ~/.ssh
    - '[[ -f /.dockerenv ]] && echo -e "Host *\n\tStrictHostKeyChecking no\n\n" > ~/.ssh/config'

     # Install gems
    - gem install capistrano --version 3.5.0
    - gem install bunny --version ">= 2.2.2"
    - gem install mongo

  script:
    - cap staging deploy
