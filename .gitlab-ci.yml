image: docker:latest
services:
  - docker:dind

stages:
  - build
  - test
  - release
  - deploy

variables:
  DOCKER_DRIVER: overlay
  BUILD_IMAGE: $CI_REGISTRY_IMAGE:$CI_BUILD_REF_NAME
  RELEASE_IMAGE: $CI_REGISTRY_IMAGE:latest
  PRODUCTION_REGISTRY: registry.heroku.com
  PRODUCTION_IMAGE: $PRODUCTION_REGISTRY/audeets/web

build:
  stage: build
  script:
    - docker login -u gitlab-ci-token -p $CI_BUILD_TOKEN $CI_REGISTRY
    - docker build --pull -t $BUILD_IMAGE .
    - docker push $BUILD_IMAGE

linting:
  stage: test
  variables:
    GIT_STRATEGY: none
  script:
    - docker login -u gitlab-ci-token -p $CI_BUILD_TOKEN $CI_REGISTRY
    - docker pull $BUILD_IMAGE
    - docker run $BUILD_IMAGE npm run lint

registry:
  stage: release
  variables:
    GIT_STRATEGY: none
  script:
    - docker login -u gitlab-ci-token -p $CI_BUILD_TOKEN $CI_REGISTRY
    - docker pull $BUILD_IMAGE
    - docker tag $BUILD_IMAGE $RELEASE_IMAGE
    - docker push $RELEASE_IMAGE
  only:
    - master

staging:
  stage: deploy
  environment: staging
  image: cdrx/rancher-gitlab-deploy
  variables:
    GIT_STRATEGY: none
  script:
    - upgrade --stack $CI_PROJECT_NAMESPACE-staging

production:
  stage: deploy
  environment: production
  variables:
    GIT_STRATEGY: none
  script:
    - docker login -u gitlab-ci-token -p $CI_BUILD_TOKEN $CI_REGISTRY
    - docker pull $RELEASE_IMAGE
    - docker tag $RELEASE_IMAGE $PRODUCTION_IMAGE
    - docker login -e="$GITLAB_USER_EMAIL" -u="$GITLAB_USER_EMAIL" -p="$HEROKU_API_KEY" $PRODUCTION_REGISTRY
    - docker push $PRODUCTION_IMAGE
